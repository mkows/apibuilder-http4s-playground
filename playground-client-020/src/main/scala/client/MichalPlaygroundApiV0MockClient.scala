/**
 * Generated by API Builder - https://www.apibuilder.io
 * Service version: 0.0.2-dev
 * apibuilder 0.14.75 localhost 9000/michal/playground-api/0.0.2-dev/http4s_0_20
 */
package io.github.mkows.playground.api.v0.mock {

  class Client[F[_]: cats.Applicative] extends io.github.mkows.playground.api.v0.interfaces.Client[F] {

    val baseUrl: org.http4s.Uri = org.http4s.Uri.unsafeFromString("http://mock.localhost")

    override def healthchecks: io.github.mkows.playground.api.v0.Healthchecks[F] = new MockHealthchecks[F]

  }

  class MockHealthchecks[F[_]: cats.Applicative] extends io.github.mkows.playground.api.v0.Healthchecks[F] {

    def get(
      requestHeaders: Seq[(String, String)] = Nil
    ): F[io.github.mkows.playground.api.v0.models.Healthcheck] = cats.Applicative[F].pure {
      io.github.mkows.playground.api.v0.mock.Factories.makeHealthcheck()
    }

    def postTestFormParamsJson(
      param1: String,
      requestHeaders: Seq[(String, String)] = Nil
    ): F[Unit] = cats.Applicative[F].pure {
      // unit type
    }

    def getById(
      id: Int,
      requestHeaders: Seq[(String, String)] = Nil
    ): F[io.github.mkows.playground.api.v0.models.Healthcheck] = cats.Applicative[F].pure {
      io.github.mkows.playground.api.v0.mock.Factories.makeHealthcheck()
    }

  }

  object Factories {

    def randomString(length: Int = 24): String = {
      _root_.scala.util.Random.alphanumeric.take(length).mkString
    }

    def makeItemStateFailedCause(): io.github.mkows.playground.api.v0.models.ItemStateFailedCause = io.github.mkows.playground.api.v0.models.ItemStateFailedCause.ErrorCause1

    def makeItemStateProgress(): io.github.mkows.playground.api.v0.models.ItemStateProgress = io.github.mkows.playground.api.v0.models.ItemStateProgress.Init

    def makeError(): io.github.mkows.playground.api.v0.models.Error = io.github.mkows.playground.api.v0.models.Error(
      code = 1,
      message = Factories.randomString(12),
      messageCode = Factories.randomString(2),
      messageLengthy = Factories.randomString(30),
      details = None
    )

    def makeHealthcheck(): io.github.mkows.playground.api.v0.models.Healthcheck = io.github.mkows.playground.api.v0.models.Healthcheck(
      status = Factories.randomString(24),
      createdAt = java.time.Instant.now
    )

    def makeItemState(): io.github.mkows.playground.api.v0.models.ItemState = io.github.mkows.playground.api.v0.mock.Factories.makeItemStateProgress()

  }

}